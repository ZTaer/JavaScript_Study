// 位移符号( 直接操纵二进制位数 )
//		左移(<<),右移(>>):
//			注意: <</>>对正负没有影响,因为他们真正只操控31位,正负位不进行操纵
//		无符左移(<<<),无符右移(>>>):
//			注意: <<</>>>直接操控32位,因此会影响负数差距会非常大,不过无符位数用负数,也是他喵的神经病

// 左移( << )
	var test = 123;
	alert(test.toString(2));  // 123 : 0 0000000 00000000 00000000 01111011
	var test1 = test << 5; // 左位移
	alert(test1.toString(2)); // 3936 : 0 0000000 00000000 00001111 01100000 :可以发现,在"左移"在末尾插入了5位0
	alert(test1); // 3936
// 右移( >> )
	var test2 = 12; 
	alert(test2.toString(2)); // 12 : 0 0000000 000000000 000000000 00001100
	var test3 = test2 >> 3; // 右位移
	alert(test3.toString(2)); // 1 : 0 0000000 000000000 000000000 00000001 :可以发现,在"右移"在开头插入3个0
	alert(test3); // 1

// 无符左/右移动,直接操控32位,原理于上方类似
	// 无符左移<<<
	// 无符右移>>>

